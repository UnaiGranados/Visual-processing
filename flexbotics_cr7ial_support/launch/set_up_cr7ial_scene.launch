<?xml version="1.0"?>
<launch>

  <!-- Input arguments. If "use_sim" not specified will run in simulation mode -->
  <arg name="use_sim" default="true" />
  <arg name="use_moveit" default="false" />
  <arg name="use_mc" default="true" />
  <arg name="robot_ip" unless="$(arg use_sim)" default="192.168.0.2"/>
  <arg name="launch_rviz" default="true" />
  <arg name="rviz_config" default="$(find flexbotics_cr7ial_support)/launch/cr7ial_scene.rviz" />

  <arg name="robot_name" value="calibration_scene"/>
  <arg name="robot_description" default="robot_description"/>

  <!-- FANUC CR-7iA/L configuration and scene URDF -->
  <param name="robot_name" value="$(arg robot_name)"/>
  <param name="$(arg robot_description)" command="$(find xacro)/xacro '$(find flexbotics_cr7ial_support)/urdf/cr7ial_scene.urdf.xacro'" />
  <param name="$(arg robot_description)_semantic" textfile="$(find flexbotics_cr7ial_moveit_config)/config/calibration_scene.srdf" />
  <rosparam command="load" file="$(find fanuc_cr7ia_support)/config/joint_names_cr7ial.yaml" />

  <!-- Launch MoveIt! -->
  <group if="$(arg use_moveit)">

    <!-- Planning context -->
    <group ns="$(arg robot_description)_planning">
      <rosparam command="load" file="$(find flexbotics_cr7ial_moveit_config)/config/joint_limits.yaml"/>
    </group>
    <group ns="$(arg robot_description)_kinematics">
      <rosparam command="load" file="$(find flexbotics_cr7ial_moveit_config)/config/kinematics.yaml"/>
    </group>

    <!-- Move group -->
    <include file="$(find flexbotics_cr7ial_moveit_config)/launch/move_group.launch"/>
  </group>

  <!-- Launch the robot_state_publisher node -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Simulated robot setup -->
  <group if="$(arg use_sim)">
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch"/>
  </group>

  <!-- Real robot setup -->
  <group unless="$(arg use_sim)">
    <arg name="use_bswap" unless="$(arg use_sim)" default="true" doc="If true, robot driver will byte-swap all incoming and outgoing data (only required if not using industrial simulator)" />
    <include file="$(find fanuc_cr7ia_support)/launch/robot_interface_streaming_cr7ial.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
      <arg name="use_bswap"  value="$(arg use_bswap)" />
    </include>
  </group>

  <!-- Manipulator Controller -->
  <group ns="$(arg robot_name)" if="$(arg use_mc)">
    <rosparam file="$(find flexbotics_cr7ial_support)/config/manipulator_controller.yaml"/>
    <rosparam file="$(find flexbotics_cr7ial_support)/config/manipulator_commander.yaml"/>
    <node name="manipulator_controller" pkg="manipulator_controller" type="manipulator_controller_node"/>
  </group>

  <!-- RViz configuration -->
  <group if="$(arg launch_rviz)">
    <arg     if="$(eval rviz_config=='')" name="command_args" value="" />
    <arg unless="$(eval rviz_config=='')" name="command_args" value="-d $(arg rviz_config)" />
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" args="$(arg command_args)" output="screen" />
  </group>

  <!-- RealSense camera  -->
  <include file="$(find realsense2_camera)/launch/rs_camera.launch"/>

  <!-- Load internal camera calibration intrinsics  -->
  <include file="$(find publisher_subscriber)/launch/publisher_subscriber.launch"/>


  <!-- arguments for the RealSense urdf xacro file, rviz visualization and namespace -->
  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find realsense2_description)/rviz/urdf.rviz" required="true" /> -->

</launch>
